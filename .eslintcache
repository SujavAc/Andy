[{"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\index.js":"1","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\App.js":"2","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\reportWebVitals.js":"3","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\navbar.js":"4","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\content.js":"5","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\homepage.js":"6","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\carousel.js":"7","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\admin.js":"8","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\enquiryform.js":"9","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\form.js":"10","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\footer.js":"11","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\About Us.js":"12","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Map\\map.js":"13","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Map\\GMap.js":"14","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\pages.js":"15","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Popular course.js":"16","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Faculties.js":"17","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Migration Service.js":"18","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\FAQs.js":"19","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Student Services.js":"20","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Studnet Testimonials.js":"21","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Blog.js":"22","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Events.js":"23","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Webinar.js":"24","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Form\\openform.js":"25","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\feedback.js":"26","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\feedbackform\\form.js":"27","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\topBanner.js":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":1629,"mtime":1613011848954,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":6715,"mtime":1613596024610,"results":"33","hashOfConfig":"30"},{"size":3540,"mtime":1613196777140,"results":"34","hashOfConfig":"30"},{"size":1274,"mtime":1613597010317,"results":"35","hashOfConfig":"30"},{"size":4500,"mtime":1613077568533,"results":"36","hashOfConfig":"30"},{"size":9474,"mtime":1613175748581,"results":"37","hashOfConfig":"30"},{"size":5347,"mtime":1613524036413,"results":"38","hashOfConfig":"30"},{"size":12139,"mtime":1613302449473,"results":"39","hashOfConfig":"30"},{"size":5434,"mtime":1613556414145,"results":"40","hashOfConfig":"30"},{"size":4868,"mtime":1613630617779,"results":"41","hashOfConfig":"30"},{"size":976,"mtime":1612675804764,"results":"42","hashOfConfig":"30"},{"size":745,"mtime":1612676090758,"results":"43","hashOfConfig":"30"},{"size":3385,"mtime":1613636516880,"results":"44","hashOfConfig":"30"},{"size":4674,"mtime":1613633949375,"results":"45","hashOfConfig":"30"},{"size":230,"mtime":1613633395649,"results":"46","hashOfConfig":"30"},{"size":243,"mtime":1613633350258,"results":"47","hashOfConfig":"30"},{"size":195,"mtime":1613009061303,"results":"48","hashOfConfig":"30"},{"size":313,"mtime":1613633370156,"results":"49","hashOfConfig":"30"},{"size":271,"mtime":1613633466304,"results":"50","hashOfConfig":"30"},{"size":198,"mtime":1613633279489,"results":"51","hashOfConfig":"30"},{"size":199,"mtime":1613008913536,"results":"52","hashOfConfig":"30"},{"size":616,"mtime":1613636423708,"results":"53","hashOfConfig":"30"},{"size":11375,"mtime":1613610158629,"results":"54","hashOfConfig":"30"},{"size":3629,"mtime":1613592697980,"results":"55","hashOfConfig":"30"},{"size":5384,"mtime":1613604745894,"results":"56","hashOfConfig":"30"},{"size":1023,"mtime":1613630250500,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1dywm5v",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\index.js",[],["119","120"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\App.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\reportWebVitals.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\navbar.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\content.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\homepage.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\carousel.js",["121","122"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\n\r\nconst drawerWidth = 275;\r\n\r\n\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'Animation',\r\n    imgPath:\r\n      'https://31.media.tumblr.com/1dde1b57268761a176c6819734e27b70/tumblr_nmo4hkhmsi1txe8seo1_500.gif',\r\n  },\r\n  {\r\n    label: 'Spiral Animation',\r\n    imgPath:\r\n      'https://i.pinimg.com/originals/c6/df/a2/c6dfa22150790c670c988c5196f6ba0e.gif',\r\n  },\r\n  {\r\n    label: 'Animal Bond',\r\n    imgPath:\r\n      'https://i.gifer.com/Bhm.gif',\r\n  },\r\n  {\r\n    label: 'Welcome to Rodger Educational Services Webinar',\r\n    imgPath:\r\n      'https://i.pinimg.com/originals/88/64/1b/88641b07e2682ccbaed6ad2a23da0fb2.gif',\r\n  },\r\n  {\r\n    label: 'Welcome',\r\n    imgPath:\r\n      'http://ingsfarmprimaryschool.co.uk/Content/Images/kids.gif',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 100,\r\n    margintop:50,\r\n    flexGrow: 1,\r\n  },\r\n  carousel: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  carouselShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    marginTop:'110px',\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 550,\r\n    display: 'block',\r\n    maxWidth: \"100%\",\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n    \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root,clsx(classes.carousel, {\r\n      [classes.carouselShift]:open\r\n    }\r\n        \r\n      )}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews \r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {tutorialSteps.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <img className={classes.img} src={step.imgPath} alt={step.label} />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\admin.js",["123"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n//import DeleteFunction from '../database/deleteData.php';\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n//import CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Container, Grid, Grow } from \"@material-ui/core\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Page from \"./pages\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n      height: theme.spacing(16),\r\n    },\r\n    close: {\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    flexGrow: 1,\r\n    width: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  form: {\r\n    marginLeft: \"auto\",\r\n  },\r\n\r\n  list: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  card: {\r\n    maxWidth: \"100%\",\r\n    height: 300,\r\n    width: \"100%\",\r\n  },\r\n  golden: {\r\n    color: \"rgb(205, 112, 0)\",\r\n  },\r\n  spinner: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  paper: {\r\n    height: \"auto\",\r\n    padding: theme.spacing(2),\r\n    margin: 25,\r\n    width: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper1: {\r\n    height: \"auto\",\r\n    padding: theme.spacing(2),\r\n    margin: 25,\r\n    marginTop: 150,\r\n    width: \"auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Admin() {\r\n  const [data, setData] = useState({ Title: \"\", Description: \"\" });\r\n  const [enquiryData, setEnquiryData] = React.useState({ data: [] });\r\n  const [image, setImage] = useState({ selectedFile: \"\" });\r\n  const [msgError, setMsgError] = useState({ message: \"\", success: \"\" });\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    Axios.post(\r\n      \"http://localhost:81/Webandy/webandy/src/database/getenquiryform.php\"\r\n    )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setEnquiryData({ data: response.data });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const onChangeFile = (event) => {\r\n    const picture = event.target.files[0];\r\n    setData((prevSetData) => ({\r\n      Title: prevSetData.Title,\r\n      Description: prevSetData.Description,\r\n    }));\r\n    setImage({\r\n      selectedFile: picture,\r\n      //URL.createObjectURL(picture)\r\n    });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  const handleClick = (Transition) => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n    if (!image.selectedFile || !data.Title || !data.Description) {\r\n      setMsgError({\r\n        message: \"fill all the details\",\r\n      });\r\n    } else {\r\n      const contentData = new FormData();\r\n      contentData.append(\"Title\", data.Title);\r\n      contentData.append(\"Description\", data.Description);\r\n      contentData.append(\r\n        \"Picture\",\r\n        image.selectedFile,\r\n        image.selectedFile.name\r\n      );\r\n\r\n      Axios.post(\r\n        \"http://localhost:81/Webandy/webandy/src/database/post.php\",\r\n        contentData\r\n      )\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res);\r\n          setMsgError({\r\n            message: res.data,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteEnquiry = (id) => {\r\n    console.log(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={5} className={classes.paper1}>\r\n        <form className={classes.form} Validate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            onChange={(event) => {\r\n              const title = event.target.value;\r\n              setData((prevSetData) => ({\r\n                Title: title,\r\n                Picture: prevSetData.Picture,\r\n                Description: prevSetData.Description,\r\n              }));\r\n            }}\r\n          />\r\n          <br></br>\r\n          <br></br>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            onChange={(event) => {\r\n              const description = event.target.value;\r\n              setData((prevSetData) => ({\r\n                Title: prevSetData.Title,\r\n                Description: description,\r\n                Picture: prevSetData.Picture,\r\n              }));\r\n            }}\r\n          />\r\n          <p className=\"title\">Select Image:</p>\r\n          <div style={{ marginBottom: 10 }}>\r\n            <input type=\"file\" onChange={onChangeFile} />\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClick(SlideTransition)}\r\n          >\r\n            Create Banner\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        message={msgError.message}\r\n        key={state.Transition.name}\r\n        action={\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <div>\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Our <span className={classes.golden}>Enquiry List </span>\r\n        </h1>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : enquiryData.data.length === 0 ? (\r\n          <div>Error: There are no products in DB\"</div>\r\n        ) : (\r\n          <div>\r\n            <Container>\r\n              <Grow in>\r\n                <Grid container spacing={5} padding={10}>\r\n                  {enquiryData.data.map((value, index) => (\r\n                    <Paper elevation={5} className={classes.paper}>\r\n                      <Card key={index.ID}>\r\n                        <CardActionArea key={index.ID}>\r\n                          <CardContent key={index.ID}>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              component=\"h2\"\r\n                            >\r\n                              <p>\r\n                                {\" \"}\r\n                                <b>Full Name:</b> {value.FullName}\r\n                              </p>\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" component=\"h5\">\r\n                              <p>\r\n                                {\" \"}\r\n                                <b>Email:</b> {value.Email}\r\n                              </p>\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"textSecondary\"\r\n                              component=\"p\"\r\n                            >\r\n                              <p>\r\n                                {\" \"}\r\n                                <b>Message:</b> {value.Message}{\" \"}\r\n                              </p>\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"textSecondary\"\r\n                              component=\"h5\"\r\n                            >\r\n                              <p>\r\n                                {\" \"}\r\n                                <b>Date:</b> {value.Date}{\" \"}\r\n                              </p>\r\n                              <br></br>\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions key={index.ID}>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Paper>\r\n                  ))}\r\n                </Grid>\r\n              </Grow>\r\n            </Container>\r\n            <div>\r\n              <Page p1={\"This is Admin P1\"} p2={\"This is Admin P2\"} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\enquiryform.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\form.js",["124","125"],"import React, { useState, useMemo } from \"react\";\r\nimport {\r\n  fade,\r\n  //ThemeProvider,\r\n  withStyles,\r\n  makeStyles,\r\n  //createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\n//import InputBase from '@material-ui/core/InputBase';\r\n//import InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import FormControl from '@material-ui/core/FormControl';\r\n//import { green } from '@material-ui/core/colors';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport countryList from \"react-select-country-list\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Axios from \"axios\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport PropTypes from \"prop-types\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\nconst question = [\r\n  {\r\n    label: \"Visa Status\",\r\n  },\r\n  {\r\n    label: \"Visa Update\",\r\n  },\r\n  {\r\n    label: \"Course Selection\",\r\n  },\r\n  {\r\n    label: \"Fee Structure\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"45ch\",\r\n    },\r\n    close: {\r\n      padding: theme.spacing(0.5),\r\n    },\r\n  },\r\n  error: {\r\n    color: \"#ff0000\",\r\n  },\r\n  success: {\r\n    color: \"#00ff00\",\r\n  },\r\n  floatIcon: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      position: \"fixed\",\r\n      right: \"0%\",\r\n      top: \"50%\",\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    \"& input:valid + fieldset\": {\r\n      borderColor: \"green\",\r\n      borderWidth: 2,\r\n    },\r\n    \"& input:invalid + fieldset\": {\r\n      borderColor: \"red\",\r\n      borderWidth: 2,\r\n    },\r\n    \"& input:valid:focus + fieldset\": {\r\n      borderLeftWidth: 6,\r\n      padding: \"4px !important\", // override inline-style\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction DialogForm(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n  const classes = useStyles();\r\n  const countries = useMemo(() => countryList().getData(), []);\r\n  const [data, setData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    number: \"\",\r\n    passport: \"\",\r\n    question: \"\",\r\n    message: \"\",\r\n  });\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n  const [msg, setMsg] = useState({ errMsg: \"\", successMsg: \"\" });\r\n\r\n  var pattern = new RegExp(\r\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n  );\r\n  var phone = new RegExp(\r\n    /^(?:\\+?(61))? ?(?:\\((?=.*\\)))?(0?[2-57-8])\\)? ?(\\d\\d(?:[- ](?=\\d{3})|(?!\\d\\d[- ]?\\d[- ]))\\d\\d[- ]?\\d[- ]?\\d{3})$/i\r\n  );\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const onSubmitForm = (Transition) => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n    if (\r\n      !data.firstname ||\r\n      !data.lastname ||\r\n      !data.email ||\r\n      !data.number ||\r\n      !data.passport ||\r\n      !data.question ||\r\n      !data.message\r\n    ) {\r\n      setMsg({\r\n        errMsg: \"Fill up all data\",\r\n      });\r\n    } else if (!pattern.test(data.email)) {\r\n      setMsg({\r\n        errMsg: \"Not valid Email...!! Try again\",\r\n      });\r\n    } else if (!phone.test(data.number)) {\r\n      setMsg({\r\n        errMsg: \"Try harder...!!! use valid phone number\",\r\n      });\r\n    } else {\r\n      const formData = new FormData();\r\n      formData.append(\"firstname\", data.firstname);\r\n      formData.append(\"lastname\", data.lastname);\r\n      formData.append(\"email\", data.email);\r\n      formData.append(\"number\", data.number);\r\n      formData.append(\"passport\", data.passport);\r\n      formData.append(\"question\", data.question);\r\n      formData.append(\"message\", data.message);\r\n      // formData.append('formdata','formdata');\r\n\r\n      Axios.post(\r\n        \"http://localhost:81/Webandy/webandy/src/database/form.php\",\r\n        formData\r\n      )\r\n        .then((res) => {\r\n          console.log(res);\r\n          setMsg({\r\n            successMsg: res.data,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMsg({\r\n            errMessage: err.message,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  const handleCloseSnackBar = () => {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Seek help with experts</DialogTitle>\r\n\r\n      <form className={classes.root} noValidate>\r\n        <ValidationTextField\r\n          className={classes.margin}\r\n          label=\"First Name\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={data.firstname}\r\n          onChange={(event) => {\r\n            const FirstName = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: FirstName,\r\n              lastname: prevSetData.lastname,\r\n              email: prevSetData.email,\r\n              number: prevSetData.number,\r\n              passport: prevSetData.passport,\r\n              question: prevSetData.question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n          id=\"validation-outlined-input\"\r\n        />\r\n        <ValidationTextField\r\n          className={classes.margin}\r\n          label=\"Last Name\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={data.lastname}\r\n          id=\"validation-outlined-input\"\r\n          onChange={(event) => {\r\n            const LastName = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: LastName,\r\n              email: prevSetData.email,\r\n              number: prevSetData.number,\r\n              passport: prevSetData.passport,\r\n              question: prevSetData.question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n        />\r\n        <ValidationTextField\r\n          className={classes.margin}\r\n          label=\"Email Address\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={data.email}\r\n          id=\"validation-outlined-input\"\r\n          onChange={(event) => {\r\n            const Email = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: prevSetData.lastname,\r\n              email: Email,\r\n              number: prevSetData.number,\r\n              passport: prevSetData.passport,\r\n              question: prevSetData.question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n        />\r\n        <ValidationTextField\r\n          className={classes.margin}\r\n          label=\"Phone Number\"\r\n          required\r\n          variant=\"outlined\"\r\n          defaultValue={data.number}\r\n          id=\"validation-outlined-input\"\r\n          onChange={(event) => {\r\n            const Number = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: prevSetData.lastname,\r\n              email: prevSetData.email,\r\n              number: Number,\r\n              passport: prevSetData.passport,\r\n              question: prevSetData.question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"standard-select-country\"\r\n          select\r\n          label=\"Passport issued\"\r\n          value={data.passport}\r\n          options={countries}\r\n          helperText=\"Please select the Country Name\"\r\n          onChange={(event) => {\r\n            const Passport = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: prevSetData.lastname,\r\n              email: prevSetData.email,\r\n              number: prevSetData.number,\r\n              passport: Passport,\r\n              question: prevSetData.question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n        >\r\n          {countries.map((option) => (\r\n            <MenuItem key={option.label} value={option.label}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"standard-select-currency\"\r\n          select\r\n          label=\"Enquiry Topic\"\r\n          value={data.question}\r\n          helperText=\"Select the related topic \"\r\n          onChange={(event) => {\r\n            const Question = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: prevSetData.lastname,\r\n              email: prevSetData.email,\r\n              number: prevSetData.number,\r\n              passport: prevSetData.passport,\r\n              question: Question,\r\n              message: prevSetData.message,\r\n            }));\r\n          }}\r\n        >\r\n          {question.map((option) => (\r\n            <MenuItem key={option.label} value={option.label}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Message\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue={data.message}\r\n          variant=\"outlined\"\r\n          onChange={(event) => {\r\n            const Message = event.target.value;\r\n            setData((prevSetData) => ({\r\n              firstname: prevSetData.firstname,\r\n              lastname: prevSetData.lastname,\r\n              email: prevSetData.email,\r\n              number: prevSetData.number,\r\n              passport: prevSetData.passport,\r\n              question: prevSetData.question,\r\n              message: Message,\r\n            }));\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={onSubmitForm(SlideTransition)}\r\n        >\r\n          Send\r\n        </Button>\r\n      </form>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        message={msg.errMsg ? msg.errMsg : msg.successMsg}\r\n        key={state.Transition.name}\r\n        action={\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleCloseSnackBar}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        }\r\n      />\r\n\r\n      {/* {msg.errMsg ?(\r\n        <div className={classes.error}>{msg.errMsg}</div>\r\n      ):(\r\n        <div className={classes.success}>{msg.successMsg}</div>\r\n      )} */}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nDialogForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function Form() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState();\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.floatIcon}>\r\n      <Fab variant=\"extended\" onClick={handleClickOpen}>\r\n        Talk with Experts\r\n      </Fab>\r\n      <DialogForm\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\footer.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\About Us.js",["126"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Map\\map.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Map\\GMap.js",["127"],"import React, { useEffect, useRef } from 'react';\r\n \r\nconst GMap = () => {\r\n  const googleMapRef = useRef(null);\r\n  let googleMap = null;\r\n \r\n  useEffect(() => {\r\n    googleMap = initGoogleMap();\r\n    createMarker();\r\n  }, []);\r\n \r\n \r\n  // initialize the google map\r\n  const initGoogleMap = () => {\r\n    return new window.google.maps.Map(googleMapRef.current, {\r\n      center: { lat: -33.90963  , lng: 151.05664 },\r\n      zoom: 12\r\n    });\r\n  }\r\n \r\n  // create marker on google map\r\n  const createMarker = () => new window.google.maps.Marker({\r\n    position: { lat: -33.8721405, lng: 151.0931589 },\r\n    map: googleMap\r\n  });\r\n \r\n  return <div\r\n    ref={googleMapRef}\r\n    style={{ width: 'auto', height: 500 }}\r\n  />\r\n}\r\n \r\nexport default GMap;","C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\pages.js",["128","129","130","131","132"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Popular course.js",["133"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Faculties.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Migration Service.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\FAQs.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Student Services.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Studnet Testimonials.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Blog.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Events.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\Pages\\Webinar.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\Form\\openform.js",["134"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\feedback.js",["135"],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\feedbackform\\form.js",[],"C:\\xampp1\\htdocs\\webandy\\webandy\\src\\component\\topBanner.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":91,"column":16,"nodeType":"143","messageId":"144","endLine":91,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":114,"column":33,"nodeType":"147","messageId":"148","endLine":114,"endColumn":34},{"ruleId":"141","severity":1,"message":"149","line":153,"column":9,"nodeType":"143","messageId":"144","endLine":153,"endColumn":22},{"ruleId":"141","severity":1,"message":"150","line":3,"column":3,"nodeType":"143","messageId":"144","endLine":3,"endColumn":7},{"ruleId":"141","severity":1,"message":"151","line":23,"column":8,"nodeType":"143","messageId":"144","endLine":23,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":72,"column":9,"nodeType":"154","endLine":72,"endColumn":70},{"ruleId":"155","severity":1,"message":"156","line":8,"column":17,"nodeType":"157","endLine":8,"endColumn":32},{"ruleId":"141","severity":1,"message":"158","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":17},{"ruleId":"141","severity":1,"message":"159","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"160","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":22},{"ruleId":"141","severity":1,"message":"161","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":99,"column":11,"nodeType":"154","endLine":99,"endColumn":84},{"ruleId":"141","severity":1,"message":"162","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"150","line":3,"column":3,"nodeType":"143","messageId":"144","endLine":3,"endColumn":7},{"ruleId":"141","severity":1,"message":"163","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":22},{"ruleId":"141","severity":1,"message":"164","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'deleteEnquiry' is assigned a value but never used.","'fade' is defined but never used.","'NavigationIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'googleMap' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'CardMedia' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'Imaging' is defined but never used.","'Footer' is defined but never used.","'StarBorderIcon' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]